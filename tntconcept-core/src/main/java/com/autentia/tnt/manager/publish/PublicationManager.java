/**
 * TNTConcept Easy Enterprise Management by Autentia Real Bussiness Solution S.L.
 * Copyright (C) 2007 Autentia Real Bussiness Solution S.L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.autentia.tnt.manager.publish;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;


import com.autentia.tnt.businessobject.Magazine;
import com.autentia.tnt.businessobject.Publication;
import com.autentia.tnt.dao.SortCriteria;
import com.autentia.tnt.dao.hibernate.MagazineDAO;
import com.autentia.tnt.dao.hibernate.PublicationDAO;
import com.autentia.tnt.dao.search.PublicationSearch;
import com.autentia.tnt.util.SpringUtils;




public class PublicationManager {


/* Publication - generated by stajanov (do not edit/delete) */



  /** Logger */
  private static final Log log = LogFactory.getLog(PublicationManager.class);

  /** Publication DAO **/
  private PublicationDAO publicationDAO;
  
  private PublicationServiceProxy proxy = new PublicationServiceProxyImpl();

  /**
   * Get default PublicationManager as defined in Spring's configuration file.
   * @return the default singleton PublicationManager
   */
  public static PublicationManager getDefault()
  {
    return (PublicationManager)SpringUtils.getSpringBean("managerPublication");
  }

  /** 
   * Empty constructor needed by CGLIB (Spring AOP)
   */
  protected PublicationManager()
  {
  }
	
  /** 
   * Default constructor 
   * @deprecated do not construct managers alone: use Spring's declared beans
   */
  public PublicationManager( PublicationDAO publicationDAO )
  {
    this.publicationDAO = publicationDAO;
  }

  /**
   * List publications. 
   * @param search search filter to apply
   * @param sort sorting criteria
   * @return the list of all publications sorted by requested criterion
   */
  public List<Publication> getAllEntities(PublicationSearch search, SortCriteria sort){
    return publicationDAO.search( search, sort );
  }
  
  /**
   * Get publication by primary key.
   * @return publication selected by id.
   */
  public Publication getEntityById(int id){
    //return publicationDAO.getById(id);
	  return proxy.getEntityById(id);
  }
	
  /**
   * Insert publication. 
   */
  public void insertEntity(Publication publication) {
    //publicationDAO.insert(publication);
	  proxy.insertEntity(publication);
  }
	 
  /**
   * Update publication. 
   */
  public void updateEntity(Publication publication) {
    //publicationDAO.update(publication);
	  proxy.updateEntity(publication);
  }

  /**
   * Delete publication. 
   */
  public void deleteEntity(Publication publication) {
    //publicationDAO.delete(publication);
	  proxy.deleteEntity(publication);
  }

/* Publication - generated by stajanov (do not edit/delete) */
}
