/**
 * TNTConcept Easy Enterprise Management by Autentia Real Bussiness Solution S.L.
 * Copyright (C) 2007 Autentia Real Bussiness Solution S.L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.autentia.tnt.dao.search;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import com.autentia.tnt.businessobject.Collaborator;
import com.autentia.tnt.businessobject.CommissioningDelay;
import com.autentia.tnt.businessobject.CommissioningStatus;
import com.autentia.tnt.businessobject.Project;
import com.autentia.tnt.businessobject.User;
import com.autentia.tnt.dao.ITransferObject;
import com.autentia.tnt.dao.SearchCriteria;

/**
 * Class to search for BulletinBoard objects
 * 
 * @author stajanov code generator
 */
public class CommissioningSearch extends SearchCriteria {

	/* generated by stajanov (do not edit/delete) */

	@Override
	public String getHQL() {
		StringBuilder ret = new StringBuilder();
		int iArgNum = 0;

		if (isStartRequestDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (startRequestDate == null) {
				ret.append("requestDate=:arg" + (iArgNum++));
			} else {
				ret.append("requestDate>=:arg" + (iArgNum++));
			}
		}
		if (isEndRequestDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (endRequestDate == null) {
				ret.append("requestDate=:arg" + (iArgNum++));
			} else {
				ret.append("requestDate<=:arg" + (iArgNum++));
			}
		}

		if (isNameSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getName() == null) {
				ret.append("name is NULL");
			} else {
				ret.append("name = :arg" + (iArgNum++));
			}
		}

		if (isScopeSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getScope() == null) {
				ret.append("scope is NULL");
			} else {
				ret.append("scope = :arg" + (iArgNum++));
			}
		}

		if (isContentSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getContent() == null) {
				ret.append("content is NULL");
			} else {
				ret.append("content = :arg" + (iArgNum++));
			}
		}

		if (isProductsSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getProducts() == null) {
				ret.append("products is NULL");
			} else {
				ret.append("products = :arg" + (iArgNum++));
			}
		}

		if (isStartDeliveryDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (startDeliveryDate == null) {
				ret.append("deliveryDate=:arg" + (iArgNum++));
			} else {
				ret.append("deliveryDate>=:arg" + (iArgNum++));
			}
		}
		if (isEndDeliveryDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (endDeliveryDate == null) {
				ret.append("deliveryDate=:arg" + (iArgNum++));
			} else {
				ret.append("deliveryDate<=:arg" + (iArgNum++));
			}
		}

		if (isBudgetSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getBudget() == null) {
				ret.append("budget is NULL");
			} else {
				ret.append("budget = :arg" + (iArgNum++));
			}
		}


		if (isNotesSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getNotes() == null) {
				ret.append("notes is NULL");
			} else {
				ret.append("notes = :arg" + (iArgNum++));
			}
		}

		if (isAuthorSignatureSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getAuthorSignature() == null) {
				ret.append("authorSignature is NULL");
			} else {
				ret.append("authorSignature = :arg" + (iArgNum++));
			}
		}

		if (isReviserSignatureSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getReviserSignature() == null) {
				ret.append("reviserSignature is NULL");
			} else {
				ret.append("reviserSignature = :arg" + (iArgNum++));
			}
		}

		if (isAdminSignatureSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getAdminSignature() == null) {
				ret.append("adminSignature is NULL");
			} else {
				ret.append("adminSignature = :arg" + (iArgNum++));
			}
		}

		if (isJustifyInformationSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getJustifyInformation() == null) {
				ret.append("justifyInformation is NULL");
			} else {
				ret.append("justifyInformation = :arg" + (iArgNum++));
			}
		}

		if (isDevelopedActivitiesSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getDevelopedActivities() == null) {
				ret.append("developedActivities is NULL");
			} else {
				ret.append("developedActivities = :arg" + (iArgNum++));
			}
		}

		if (isDifficultiesAppearedSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getDifficultiesAppeared() == null) {
				ret.append("difficultiesAppeared is NULL");
			} else {
				ret.append("difficultiesAppeared = :arg" + (iArgNum++));
			}
		}

		if (isResultsSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getResults() == null) {
				ret.append("results is NULL");
			} else {
				ret.append("results = :arg" + (iArgNum++));
			}
		}

		if (isConclusionsSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getConclusions() == null) {
				ret.append("conclusions is NULL");
			} else {
				ret.append("conclusions = :arg" + (iArgNum++));
			}
		}

		if (isEvaluationSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getEvaluation() == null) {
				ret.append("evaluation is NULL");
			} else {
				ret.append("evaluation = :arg" + (iArgNum++));
			}
		}

		if (isStatusSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getStatus() == null) {
				ret.append("status is NULL");
			} else {
				ret.append("status = :arg" + (iArgNum++));
			}
		}

		if (isStartInsertDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (startInsertDate == null) {
				ret.append("insertDate=:arg" + (iArgNum++));
			} else {
				ret.append("insertDate>=:arg" + (iArgNum++));
			}
		}
		if (isEndInsertDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (endInsertDate == null) {
				ret.append("insertDate=:arg" + (iArgNum++));
			} else {
				ret.append("insertDate<=:arg" + (iArgNum++));
			}
		}

		if (isStartUpdateDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (startUpdateDate == null) {
				ret.append("updateDate=:arg" + (iArgNum++));
			} else {
				ret.append("updateDate>=:arg" + (iArgNum++));
			}
		}
		if (isEndUpdateDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (endUpdateDate == null) {
				ret.append("updateDate=:arg" + (iArgNum++));
			} else {
				ret.append("updateDate<=:arg" + (iArgNum++));
			}
		}

		if (isStartDeleteDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (startDeleteDate == null) {
				ret.append("deleteDate is NULL");
			} else {
				ret.append("deleteDate>=:arg" + (iArgNum++));
			}
		}
		if (isEndDeleteDateSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (endDeleteDate == null) {
				ret.append("deleteDate is NULL");
			} else {
				ret.append("deleteDate<=:arg" + (iArgNum++));
			}
		}

		if (isProjectSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getProject() == null) {
				ret.append("project is NULL");
			} else {
				ret.append("project = :arg" + (iArgNum++));
			}
		}

		if (isCommissioningDelaysSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			ret.append("commissioningDelays.id IN (:arg" + (iArgNum++) + ")");
		}

		if (isCollaboratorsSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			ret.append("collaborators.id IN (:arg" + (iArgNum++) + ")");
		}

		if (isRevisersSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			ret.append("revisers.id IN (:arg" + (iArgNum++) + ")");
		}

		if (isDeletedSet()) {
			ret.append((ret.length() == 0) ? "WHERE " : " AND ");
			if (getDeleted() == null) {
				ret.append("deleteDate is not NULL");
			} else {
				ret.append("deleteDate is NULL");
			}
			int argNumber = iArgNum++;
			ret.append(" AND :arg" + argNumber + " = :arg" + argNumber);
		}
		
		customGetHQL(ret, iArgNum);
		return ret.toString();
	}

	@Override
	public Object[] getArguments() {
		ArrayList<Object> ret = new ArrayList<Object>();

		if (isStartRequestDateSet()) {
			ret.add(startRequestDate);
		}
		if (isEndRequestDateSet()) {
			ret.add(endRequestDate);
		}

		if (isNameSet() && getName() != null) {
			ret.add(name);
		}

		if (isScopeSet() && getScope() != null) {
			ret.add(scope);
		}

		if (isContentSet() && getContent() != null) {
			ret.add(content);
		}

		if (isProductsSet() && getProducts() != null) {
			ret.add(products);
		}

		if (isStartDeliveryDateSet()) {
			ret.add(startDeliveryDate);
		}
		if (isEndDeliveryDateSet()) {
			ret.add(endDeliveryDate);
		}

		if (isBudgetSet() && getBudget() != null) {
			ret.add(budget);
		}


		if (isNotesSet() && getNotes() != null) {
			ret.add(notes);
		}

		if (isAuthorSignatureSet() && getAuthorSignature() != null) {
			ret.add(authorSignature);
		}

		if (isReviserSignatureSet() && getReviserSignature() != null) {
			ret.add(reviserSignature);
		}

		if (isAdminSignatureSet() && getAdminSignature() != null) {
			ret.add(adminSignature);
		}

		if (isJustifyInformationSet() && getJustifyInformation() != null) {
			ret.add(justifyInformation);
		}

		if (isDevelopedActivitiesSet() && getDevelopedActivities() != null) {
			ret.add(developedActivities);
		}

		if (isDifficultiesAppearedSet() && getDifficultiesAppeared() != null) {
			ret.add(difficultiesAppeared);
		}

		if (isResultsSet() && getResults() != null) {
			ret.add(results);
		}

		if (isConclusionsSet() && getConclusions() != null) {
			ret.add(conclusions);
		}

		if (isEvaluationSet() && getEvaluation() != null) {
			ret.add(evaluation);
		}

		if (isStatusSet() && getStatus() != null) {
			ret.add(status);
		}

		if (isStartInsertDateSet()) {
			ret.add(startInsertDate);
		}
		if (isEndInsertDateSet()) {
			ret.add(endInsertDate);
		}

		if (isStartUpdateDateSet()) {
			ret.add(startUpdateDate);
		}
		if (isEndUpdateDateSet()) {
			ret.add(endUpdateDate);
		}

		if (isStartDeleteDateSet() && startDeleteDate != null) {
			ret.add(startDeleteDate);
		}
		if (isEndDeleteDateSet() && endDeleteDate != null) {
			ret.add(endDeleteDate);
		}

		if (isProjectSet() && getProject() != null) {
			ret.add(project);
		}

		if (isCommissioningDelaysSet()) {
			List<Integer> params = new ArrayList<Integer>();
			for (ITransferObject to : commissioningDelays) {
				params.add(to.getId());
			}
			ret.add(params);
		}

		if (isCollaboratorsSet()) {
			List<Integer> params = new ArrayList<Integer>();
			for (ITransferObject to : collaborators) {
				params.add(to.getId());
			}
			ret.add(params);
		}

		if (isRevisersSet()) {
			List<Integer> params = new ArrayList<Integer>();
			for (ITransferObject to : revisers) {
				params.add(to.getId());
			}
			ret.add(params);
		}

		if (isDeletedSet() && getDeleted() != null) {
			ret.add(deleted);
		}
		
		customGetArguments(ret);
		return ret.toArray();
	}

	@Override
	public void reset() {

		unsetStartRequestDate();
		unsetEndRequestDate();

		unsetName();

		unsetScope();

		unsetContent();

		unsetProducts();

		unsetStartDeliveryDate();
		unsetEndDeliveryDate();

		unsetBudget();


		unsetNotes();

		unsetAuthorSignature();

		unsetReviserSignature();

		unsetAdminSignature();

		unsetJustifyInformation();

		unsetDevelopedActivities();

		unsetDifficultiesAppeared();

		unsetResults();

		unsetConclusions();

		unsetEvaluation();

		unsetStatus();

		unsetStartInsertDate();
		unsetEndInsertDate();

		unsetStartUpdateDate();
		unsetEndUpdateDate();

		unsetStartDeleteDate();
		unsetEndDeleteDate();

		unsetProject();

		unsetCommissioningDelays();

		unsetCollaborators();

		unsetRevisers();
		
		unsetDeleted();

		customReset();
	}

	@Override
	public String toString() {
		StringBuilder ret = new StringBuilder();
		ret.append("CommissioningSearch{");

		if (isStartRequestDateSet()) {
			ret.append("(startRequestDate");
			ret.append("=" + startRequestDate);
			ret.append(")");
		}
		if (isEndRequestDateSet()) {
			ret.append("(endRequestDate");
			ret.append("=" + endRequestDate);
			ret.append(")");
		}

		if (isNameSet()) {
			ret.append("(name");
			ret.append("=" + name);
			ret.append(")");
		}

		if (isScopeSet()) {
			ret.append("(scope");
			ret.append("=" + scope);
			ret.append(")");
		}

		if (isContentSet()) {
			ret.append("(content");
			ret.append("=" + content);
			ret.append(")");
		}

		if (isProductsSet()) {
			ret.append("(products");
			ret.append("=" + products);
			ret.append(")");
		}

		if (isStartDeliveryDateSet()) {
			ret.append("(startDeliveryDate");
			ret.append("=" + startDeliveryDate);
			ret.append(")");
		}
		if (isEndDeliveryDateSet()) {
			ret.append("(endDeliveryDate");
			ret.append("=" + endDeliveryDate);
			ret.append(")");
		}

		if (isBudgetSet()) {
			ret.append("(budget");
			ret.append("=" + budget);
			ret.append(")");
		}



		if (isNotesSet()) {
			ret.append("(notes");
			ret.append("=" + notes);
			ret.append(")");
		}

		if (isAuthorSignatureSet()) {
			ret.append("(authorSignature");
			ret.append("=" + authorSignature);
			ret.append(")");
		}

		if (isReviserSignatureSet()) {
			ret.append("(reviserSignature");
			ret.append("=" + reviserSignature);
			ret.append(")");
		}

		if (isAdminSignatureSet()) {
			ret.append("(adminSignature");
			ret.append("=" + adminSignature);
			ret.append(")");
		}

		if (isJustifyInformationSet()) {
			ret.append("(justifyInformation");
			ret.append("=" + justifyInformation);
			ret.append(")");
		}

		if (isDevelopedActivitiesSet()) {
			ret.append("(developedActivities");
			ret.append("=" + developedActivities);
			ret.append(")");
		}

		if (isDifficultiesAppearedSet()) {
			ret.append("(difficultiesAppeared");
			ret.append("=" + difficultiesAppeared);
			ret.append(")");
		}

		if (isResultsSet()) {
			ret.append("(results");
			ret.append("=" + results);
			ret.append(")");
		}

		if (isConclusionsSet()) {
			ret.append("(conclusions");
			ret.append("=" + conclusions);
			ret.append(")");
		}

		if (isEvaluationSet()) {
			ret.append("(evaluation");
			ret.append("=" + evaluation);
			ret.append(")");
		}

		if (isStatusSet()) {
			ret.append("(status");
			ret.append("=" + status);
			ret.append(")");
		}

		if (isStartInsertDateSet()) {
			ret.append("(startInsertDate");
			ret.append("=" + startInsertDate);
			ret.append(")");
		}
		if (isEndInsertDateSet()) {
			ret.append("(endInsertDate");
			ret.append("=" + endInsertDate);
			ret.append(")");
		}

		if (isStartUpdateDateSet()) {
			ret.append("(startUpdateDate");
			ret.append("=" + startUpdateDate);
			ret.append(")");
		}
		if (isEndUpdateDateSet()) {
			ret.append("(endUpdateDate");
			ret.append("=" + endUpdateDate);
			ret.append(")");
		}

		if (isStartDeleteDateSet()) {
			ret.append("(startDeleteDate");
			ret.append("=" + startDeleteDate);
			ret.append(")");
		}
		if (isEndDeleteDateSet()) {
			ret.append("(endDeleteDate");
			ret.append("=" + endDeleteDate);
			ret.append(")");
		}

		if (isProjectSet()) {
			ret.append("(project");
			ret.append("=" + project);
			ret.append(")");
		}

		if (isCommissioningDelaysSet()) {
			ret.append("(commissioningDelays={");
			for (Object o : commissioningDelays.toArray()) {
				ret.append("," + o);
			}
			ret.append("})");
		}

		if (isCollaboratorsSet()) {
			ret.append("(collaborators={");
			for (Object o : collaborators.toArray()) {
				ret.append("," + o);
			}
			ret.append("})");
		}

		if (isRevisersSet()) {
			ret.append("(revisers={");
			for (Object o : revisers.toArray()) {
				ret.append("," + o);
			}
			ret.append("})");
		}

		if (isDeletedSet()) {
			ret.append("(deleteDate is null)");
		}
		
		customToString(ret);
		ret.append("}");
		return ret.toString();
	}

	// Getters and setters

	public boolean isStartRequestDateSet() {
		return startRequestDateSet;
	}

	public Date getStartRequestDate() {
		return startRequestDate;
	}

	public void setStartRequestDate(Date startRequestDate) {
		this.startRequestDate = startRequestDate;
		this.startRequestDateSet = true;
	}

	public void unsetStartRequestDate() {
		this.startRequestDateSet = false;
	}

	public boolean isEndRequestDateSet() {
		return endRequestDateSet;
	}

	public Date getEndRequestDate() {
		return endRequestDate;
	}

	public void setEndRequestDate(Date endRequestDate) {
		this.endRequestDate = endRequestDate;
		this.endRequestDateSet = true;
	}

	public void unsetEndRequestDate() {
		this.endRequestDateSet = false;
	}

	public boolean isNameSet() {
		return nameSet;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
		this.nameSet = true;
	}

	public void unsetName() {
		this.nameSet = false;
	}

	public boolean isScopeSet() {
		return scopeSet;
	}

	public String getScope() {
		return scope;
	}

	public void setScope(String scope) {
		this.scope = scope;
		this.scopeSet = true;
	}

	public void unsetScope() {
		this.scopeSet = false;
	}

	public boolean isContentSet() {
		return contentSet;
	}

	public String getContent() {
		return content;
	}

	public void setContent(String content) {
		this.content = content;
		this.contentSet = true;
	}

	public void unsetContent() {
		this.contentSet = false;
	}

	public boolean isProductsSet() {
		return productsSet;
	}

	public String getProducts() {
		return products;
	}

	public void setProducts(String products) {
		this.products = products;
		this.productsSet = true;
	}

	public void unsetProducts() {
		this.productsSet = false;
	}

	public boolean isStartDeliveryDateSet() {
		return startDeliveryDateSet;
	}

	public Date getStartDeliveryDate() {
		return startDeliveryDate;
	}

	public void setStartDeliveryDate(Date startDeliveryDate) {
		this.startDeliveryDate = startDeliveryDate;
		this.startDeliveryDateSet = true;
	}

	public void unsetStartDeliveryDate() {
		this.startDeliveryDateSet = false;
	}

	public boolean isEndDeliveryDateSet() {
		return endDeliveryDateSet;
	}

	public Date getEndDeliveryDate() {
		return endDeliveryDate;
	}

	public void setEndDeliveryDate(Date endDeliveryDate) {
		this.endDeliveryDate = endDeliveryDate;
		this.endDeliveryDateSet = true;
	}

	public void unsetEndDeliveryDate() {
		this.endDeliveryDateSet = false;
	}

	public boolean isBudgetSet() {
		return budgetSet;
	}

	public BigDecimal getBudget() {
		return budget;
	}

	public void setBudget(BigDecimal budget) {
		this.budget = budget;
		this.budgetSet = true;
	}

	public void unsetBudget() {
		this.budgetSet = false;
	}


	public boolean isNotesSet() {
		return notesSet;
	}

	public String getNotes() {
		return notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
		this.notesSet = true;
	}

	public void unsetNotes() {
		this.notesSet = false;
	}

	public boolean isAuthorSignatureSet() {
		return authorSignatureSet;
	}

	public java.lang.Boolean getAuthorSignature() {
		return authorSignature;
	}

	public void setAuthorSignature(java.lang.Boolean authorSignature) {
		this.authorSignature = authorSignature;
		this.authorSignatureSet = true;
	}

	public void unsetAuthorSignature() {
		this.authorSignatureSet = false;
	}

	public boolean isReviserSignatureSet() {
		return reviserSignatureSet;
	}

	public java.lang.Boolean getReviserSignature() {
		return reviserSignature;
	}

	public void setReviserSignature(java.lang.Boolean reviserSignature) {
		this.reviserSignature = reviserSignature;
		this.reviserSignatureSet = true;
	}

	public void unsetReviserSignature() {
		this.reviserSignatureSet = false;
	}

	public boolean isAdminSignatureSet() {
		return adminSignatureSet;
	}

	public java.lang.Boolean getAdminSignature() {
		return adminSignature;
	}

	public void setAdminSignature(java.lang.Boolean adminSignature) {
		this.adminSignature = adminSignature;
		this.adminSignatureSet = true;
	}

	public void unsetAdminSignature() {
		this.adminSignatureSet = false;
	}

	public boolean isJustifyInformationSet() {
		return justifyInformationSet;
	}

	public java.lang.Boolean getJustifyInformation() {
		return justifyInformation;
	}

	public void setJustifyInformation(java.lang.Boolean justifyInformation) {
		this.justifyInformation = justifyInformation;
		this.justifyInformationSet = true;
	}

	public void unsetJustifyInformation() {
		this.justifyInformationSet = false;
	}

	public boolean isDevelopedActivitiesSet() {
		return developedActivitiesSet;
	}

	public String getDevelopedActivities() {
		return developedActivities;
	}

	public void setDevelopedActivities(String developedActivities) {
		this.developedActivities = developedActivities;
		this.developedActivitiesSet = true;
	}

	public void unsetDevelopedActivities() {
		this.developedActivitiesSet = false;
	}

	public boolean isDifficultiesAppearedSet() {
		return difficultiesAppearedSet;
	}

	public String getDifficultiesAppeared() {
		return difficultiesAppeared;
	}

	public void setDifficultiesAppeared(String difficultiesAppeared) {
		this.difficultiesAppeared = difficultiesAppeared;
		this.difficultiesAppearedSet = true;
	}

	public void unsetDifficultiesAppeared() {
		this.difficultiesAppearedSet = false;
	}

	public boolean isResultsSet() {
		return resultsSet;
	}

	public String getResults() {
		return results;
	}

	public void setResults(String results) {
		this.results = results;
		this.resultsSet = true;
	}

	public void unsetResults() {
		this.resultsSet = false;
	}

	public boolean isConclusionsSet() {
		return conclusionsSet;
	}

	public String getConclusions() {
		return conclusions;
	}

	public void setConclusions(String conclusions) {
		this.conclusions = conclusions;
		this.conclusionsSet = true;
	}

	public void unsetConclusions() {
		this.conclusionsSet = false;
	}

	public boolean isEvaluationSet() {
		return evaluationSet;
	}

	public String getEvaluation() {
		return evaluation;
	}

	public void setEvaluation(String evaluation) {
		this.evaluation = evaluation;
		this.evaluationSet = true;
	}

	public void unsetEvaluation() {
		this.evaluationSet = false;
	}

	public boolean isStatusSet() {
		return statusSet;
	}

	public CommissioningStatus getStatus() {
		return status;
	}

	public void setStatus(CommissioningStatus status) {
		this.status = status;
		this.statusSet = true;
	}

	public void unsetStatus() {
		this.statusSet = false;
	}

	public boolean isStartInsertDateSet() {
		return startInsertDateSet;
	}

	public Date getStartInsertDate() {
		return startInsertDate;
	}

	public void setStartInsertDate(Date startInsertDate) {
		this.startInsertDate = startInsertDate;
		this.startInsertDateSet = true;
	}

	public void unsetStartInsertDate() {
		this.startInsertDateSet = false;
	}

	public boolean isEndInsertDateSet() {
		return endInsertDateSet;
	}

	public Date getEndInsertDate() {
		return endInsertDate;
	}

	public void setEndInsertDate(Date endInsertDate) {
		this.endInsertDate = endInsertDate;
		this.endInsertDateSet = true;
	}

	public void unsetEndInsertDate() {
		this.endInsertDateSet = false;
	}

	public boolean isStartUpdateDateSet() {
		return startUpdateDateSet;
	}

	public Date getStartUpdateDate() {
		return startUpdateDate;
	}

	public void setStartUpdateDate(Date startUpdateDate) {
		this.startUpdateDate = startUpdateDate;
		this.startUpdateDateSet = true;
	}

	public void unsetStartUpdateDate() {
		this.startUpdateDateSet = false;
	}

	public boolean isEndUpdateDateSet() {
		return endUpdateDateSet;
	}

	public Date getEndUpdateDate() {
		return endUpdateDate;
	}

	public void setEndUpdateDate(Date endUpdateDate) {
		this.endUpdateDate = endUpdateDate;
		this.endUpdateDateSet = true;
	}

	public void unsetEndUpdateDate() {
		this.endUpdateDateSet = false;
	}

	public boolean isStartDeleteDateSet() {
		return startDeleteDateSet;
	}

	public Date getStartDeleteDate() {
		return startDeleteDate;
	}

	public void setStartDeleteDate(Date startDeleteDate) {
		this.startDeleteDate = startDeleteDate;
		this.startDeleteDateSet = true;
	}

	public void unsetStartDeleteDate() {
		this.startDeleteDateSet = false;
	}

	public boolean isEndDeleteDateSet() {
		return endDeleteDateSet;
	}

	public Date getEndDeleteDate() {
		return endDeleteDate;
	}

	public void setEndDeleteDate(Date endDeleteDate) {
		this.endDeleteDate = endDeleteDate;
		this.endDeleteDateSet = true;
	}

	public void unsetEndDeleteDate() {
		this.endDeleteDateSet = false;
	}

	public boolean isProjectSet() {
		return projectSet;
	}

	public Project getProject() {
		return project;
	}

	public void setProject(Project project) {
		this.project = project;
		this.projectSet = true;
	}

	public void unsetProject() {
		this.projectSet = false;
	}

	public boolean isCommissioningDelaysSet() {
		return commissioningDelaysSet;
	}

	public List<CommissioningDelay> getCommissioningDelays() {
		return commissioningDelays;
	}

	public void setCommissioningDelays(
			List<CommissioningDelay> commissioningDelays) {
		this.commissioningDelays = commissioningDelays;
		this.commissioningDelaysSet = true;
	}

	public void unsetCommissioningDelays() {
		this.commissioningDelaysSet = false;
	}

	public boolean isCollaboratorsSet() {
		return collaboratorsSet;
	}

	public List<Collaborator> getCollaborators() {
		return collaborators;
	}

	public void setCollaborators(List<Collaborator> collaborators) {
		this.collaborators = collaborators;
		this.collaboratorsSet = true;
	}

	public void unsetCollaborators() {
		this.collaboratorsSet = false;
	}

	public boolean isRevisersSet() {
		return revisersSet;
	}

	public List<User> getRevisers() {
		return revisers;
	}

	public void setRevisers(List<User> revisers) {
		this.revisers = revisers;
		this.revisersSet = true;
	}

	public void unsetRevisers() {
		this.revisersSet = false;
	}

	// Fields

	private boolean startRequestDateSet;
	private Date startRequestDate;
	private boolean endRequestDateSet;
	private Date endRequestDate;

	private boolean nameSet;
	private String name;

	private boolean scopeSet;
	private String scope;

	private boolean contentSet;
	private String content;

	private boolean productsSet;
	private String products;

	private boolean startDeliveryDateSet;
	private Date startDeliveryDate;
	private boolean endDeliveryDateSet;
	private Date endDeliveryDate;

	private boolean budgetSet;
	private BigDecimal budget;

	private boolean notesSet;
	private String notes;

	private boolean authorSignatureSet;
	private java.lang.Boolean authorSignature;

	private boolean reviserSignatureSet;
	private java.lang.Boolean reviserSignature;

	private boolean adminSignatureSet;
	private java.lang.Boolean adminSignature;

	private boolean deletedSet;
	private java.lang.Boolean deleted;
	
	private boolean justifyInformationSet;
	private java.lang.Boolean justifyInformation;

	private boolean developedActivitiesSet;
	private String developedActivities;

	private boolean difficultiesAppearedSet;
	private String difficultiesAppeared;

	private boolean resultsSet;
	private String results;

	private boolean conclusionsSet;
	private String conclusions;

	private boolean evaluationSet;
	private String evaluation;

	private boolean statusSet;
	private CommissioningStatus status;

	private boolean startInsertDateSet;
	private Date startInsertDate;
	private boolean endInsertDateSet;
	private Date endInsertDate;

	private boolean startUpdateDateSet;
	private Date startUpdateDate;
	private boolean endUpdateDateSet;
	private Date endUpdateDate;

	private boolean startDeleteDateSet;
	private Date startDeleteDate;
	private boolean endDeleteDateSet;
	private Date endDeleteDate;

	private boolean projectSet;
	private Project project;

	private boolean commissioningDelaysSet;
	private List<CommissioningDelay> commissioningDelays;

	private boolean collaboratorsSet;
	private List<Collaborator> collaborators;

	private boolean revisersSet;
	private List<User> revisers;

	// Returns if there are a search condition active
	public boolean isSearchActive() {
		return customIsSearchActive() || startRequestDateSet
				|| endRequestDateSet || nameSet || scopeSet || contentSet
				|| productsSet || startDeliveryDateSet || endDeliveryDateSet
				|| budgetSet || notesSet
				|| authorSignatureSet || reviserSignatureSet
				|| adminSignatureSet || justifyInformationSet
				|| developedActivitiesSet || difficultiesAppearedSet
				|| resultsSet || conclusionsSet || evaluationSet || statusSet
				|| startInsertDateSet || endInsertDateSet || startUpdateDateSet
				|| endUpdateDateSet || startDeleteDateSet || endDeleteDateSet
				|| projectSet || commissioningDelaysSet || collaboratorsSet
				|| revisersSet || deletedSet;
	}

	/* generated by stajanov (do not edit/delete) */

	private void customGetHQL(StringBuilder ret, int iArgNum) {
	}

	private void customGetArguments(ArrayList ret) {
	}

	private void customReset() {
	}

	private void customToString(StringBuilder ret) {
	}

	private boolean customIsSearchActive() {
		return false;
	}
	
	public java.lang.Boolean getDeleted() {
		return deleted;
	}
	
	public boolean isDeletedSet() {
		return deletedSet;
	}
	
	public void setDeleted(java.lang.Boolean deleted) {
		this.deleted = deleted;
		this.deletedSet = true;
	}

	public void unsetDeleted() {
		this.deletedSet = false;
	}

}
