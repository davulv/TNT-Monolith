/**
 * TNTConcept Easy Enterprise Management by Autentia Real Bussiness Solution S.L.
 * Copyright (C) 2007 Autentia Real Bussiness Solution S.L.
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package com.autentia.tnt.manager.admin;

import java.util.List;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

import com.autentia.tnt.businessobject.Role;
import com.autentia.tnt.dao.SortCriteria;
import com.autentia.tnt.dao.hibernate.RoleDAO;
import com.autentia.tnt.dao.search.RoleSearch;
import com.autentia.tnt.util.SpringUtils;



public class RoleManager 
{
/* generated by stajanov (do not edit/delete) */


  /** Logger */
  private static final Log log = LogFactory.getLog(RoleManager.class);

  /** Role DAO **/
  private RoleDAO roleDAO;

  /**
   * Get default RoleManager as defined in Spring's configuration file.
   * @return the default singleton RoleManager
   */
  public static RoleManager getDefault()
  {
    return (RoleManager)SpringUtils.getSpringBean("managerRole");
  }

  /** 
   * Empty constructor needed by CGLIB (Spring AOP)
   */
  protected RoleManager()
  {
  }
	
  /** 
   * Default constructor 
   * @deprecated do not construct managers alone: use Spring's declared beans
   */
  public RoleManager( RoleDAO roleDAO )
  {
    this.roleDAO = roleDAO;
  }

  /**
   * List roles. 
   * @param search search filter to apply
   * @param sort sorting criteria
   * @return the list of all roles sorted by requested criterion
   */
  public List<Role> getAllEntities(RoleSearch search, SortCriteria sort){
    return roleDAO.search( search, sort );
  }
  
  /**
   * Get role by primary key.
   * @return role selected by id.
   */
  public Role getEntityById(int id){
    return roleDAO.getById(id);	    
  }
	
  /**
   * Insert role. 
   */
  public void insertEntity(Role role) {
    roleDAO.insert(role);
  }
	 
  /**
   * Update role. 
   */
  public void updateEntity(Role role) {
    roleDAO.update(role);
  }

  /**
   * Delete role. 
   */
  public void deleteEntity(Role role) {
    roleDAO.delete(role);
  }
/* generated by stajanov (do not edit/delete) */
}
